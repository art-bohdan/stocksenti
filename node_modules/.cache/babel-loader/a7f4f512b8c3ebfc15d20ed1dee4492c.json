{"ast":null,"code":"var _jsxFileName = \"/Users/bohdanartiukhov/Desktop/frontend/stocksentifrontend/src/component/ListNews/ListNews.tsx\";\nimport React from 'react';\nimport { Avatar, List } from \"antd\";\nimport moment from \"moment\";\nimport { ListArticle } from \"./ListArticle\";\nimport SpinnerContainer from \"../Spiner/SpinnerContainer\";\nimport classes from \"./List.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListNews = ({\n  id,\n  articleprovider,\n  title,\n  titlesentiment,\n  relatedsentenceswithsentimentslist,\n  date,\n  logo,\n  link\n}) => {\n  if (!relatedsentenceswithsentimentslist) {\n    return /*#__PURE__*/_jsxDEV(SpinnerContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  let day = moment(date);\n  let diff = day.fromNow(); // let currentDate:any= new Date();\n  // let publicDate:any = date;\n  // let timeAgoDate:any = Number(currentDate) - Number(publicDate);\n  // moment(timeAgoDate).format(\"DD-MM-YYYY hh:mm\")\n\n  const actions = [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      float: 'right'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginRight: '10px'\n      },\n      children: diff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 51\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classes.link,\n      href: link,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"Read the whole\"\n    }, \"read-more\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 22\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [titlesentiment === 'negative' && /*#__PURE__*/_jsxDEV(List.Item, {\n      className: classes.card,\n      actions: actions,\n      style: {\n        margin: '5px',\n        padding: '8px',\n        color: '#373D3F',\n        border: '2px solid red'\n      },\n      children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: 'avatar',\n          size: 32,\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 39\n        }, this),\n        title: articleprovider,\n        description: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), relatedsentenceswithsentimentslist.map(i => /*#__PURE__*/_jsxDEV(ListArticle, {\n        articlesentence: i.articlesentence,\n        articlesentiment: i.articlesentiment,\n        sentimentscore: i.sentimentscore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 61\n      }, this))]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 47\n    }, this), titlesentiment === 'positive' && /*#__PURE__*/_jsxDEV(List.Item, {\n      className: classes.card,\n      actions: actions,\n      style: {\n        margin: '5px',\n        padding: '8px',\n        color: '#373D3F',\n        border: '2px solid #649DD1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: 'avatar',\n          size: 32,\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 39\n        }, this),\n        title: articleprovider,\n        description: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), relatedsentenceswithsentimentslist.map(i => /*#__PURE__*/_jsxDEV(ListArticle, {\n        articlesentence: i.articlesentence,\n        articlesentiment: i.articlesentiment,\n        sentimentscore: i.sentimentscore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 61\n      }, this))]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 47\n    }, this), titlesentiment === 'neutral' && /*#__PURE__*/_jsxDEV(List.Item, {\n      className: classes.card,\n      actions: actions,\n      style: {\n        margin: '5px',\n        padding: '8px',\n        color: '#373D3F',\n        border: '2px solid green'\n      },\n      children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: 'avatar',\n          size: 32,\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }, this),\n        title: articleprovider,\n        description: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), relatedsentenceswithsentimentslist.map(i => /*#__PURE__*/_jsxDEV(ListArticle, {\n        articlesentence: i.articlesentence,\n        articlesentiment: i.articlesentiment,\n        sentimentscore: i.sentimentscore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 61\n      }, this))]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c = ListNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListNews\");","map":{"version":3,"sources":["/Users/bohdanartiukhov/Desktop/frontend/stocksentifrontend/src/component/ListNews/ListNews.tsx"],"names":["React","Avatar","List","moment","ListArticle","SpinnerContainer","classes","ListNews","id","articleprovider","title","titlesentiment","relatedsentenceswithsentimentslist","date","logo","link","day","diff","fromNow","actions","float","marginRight","card","margin","padding","color","border","map","i","articlesentence","articlesentiment","sentimentscore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Avatar, List} from \"antd\";\nimport moment from \"moment\";\nimport {ListArticle} from \"./ListArticle\";\nimport {SentimentslistType} from \"../../type/types\";\nimport SpinnerContainer from \"../Spiner/SpinnerContainer\";\nimport classes from \"./List.module.css\";\n\ntype PropsType ={\n        id: number | null\n        articleprovider: string | null\n        title: string | null\n        relatedsentenceswithsentimentslist: Array <SentimentslistType>\n        date:number | null\n    logo: string| null\n        link: string | undefined\n        titlesentiment: string | null\n}\n\nexport const ListNews:React.FC<PropsType> = ({id, articleprovider,\n                                                 title, titlesentiment, relatedsentenceswithsentimentslist,\n                                                 date,logo, link}) => {\n    if (!relatedsentenceswithsentimentslist) {\n        return <SpinnerContainer/>;\n    }\n    let day = moment(date);\n    let diff = day.fromNow();\n    // let currentDate:any= new Date();\n    // let publicDate:any = date;\n    // let timeAgoDate:any = Number(currentDate) - Number(publicDate);\n    // moment(timeAgoDate).format(\"DD-MM-YYYY hh:mm\")\n    const actions = [<div style={{float:'right'}}><span style={{marginRight:'10px'}}>{diff}</span>&nbsp;\n                    <a className={classes.link} href={link} target=\"_blank\" rel=\"noopener noreferrer\" key=\"read-more\">Read the whole</a></div>];\n    return (\n        <React.Fragment>\n            {titlesentiment === 'negative' && <List.Item className={classes.card} actions={actions} style={{margin:'5px',padding:'8px',color:'#373D3F', border: '2px solid red'}} key={id}>\n              <List.Item.Meta avatar={<Avatar alt={'avatar'} size={32} src={logo}/>} title={articleprovider} description={title}/>\n                {relatedsentenceswithsentimentslist!.map(i=><ListArticle articlesentence={i.articlesentence}\n                                                                        articlesentiment={i.articlesentiment} sentimentscore={i.sentimentscore}/>)}\n            </List.Item>}\n            {titlesentiment === 'positive' && <List.Item className={classes.card} actions={actions} style={{margin:'5px',padding:'8px',color:'#373D3F', border: '2px solid #649DD1'}} key={id}>\n              <List.Item.Meta avatar={<Avatar alt={'avatar'} size={32} src={logo}/>} title={articleprovider} description={title}/>\n                {relatedsentenceswithsentimentslist!.map(i=><ListArticle articlesentence={i.articlesentence}\n                                                                        articlesentiment={i.articlesentiment} sentimentscore={i.sentimentscore}/>)}\n            </List.Item>}\n            {titlesentiment === 'neutral' && <List.Item className={classes.card} actions={actions} style={{margin:'5px',padding:'8px',color:'#373D3F', border: '2px solid green'}} key={id}>\n              <List.Item.Meta avatar={<Avatar alt={'avatar'} size={32} src={logo}/>} title={articleprovider} description={title}/>\n                {relatedsentenceswithsentimentslist!.map(i=><ListArticle articlesentence={i.articlesentence}\n                                                                        articlesentiment={i.articlesentiment} sentimentscore={i.sentimentscore}/>)}\n            </List.Item>}\n        </React.Fragment>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}